import numpy as np

def generate_result(thresh, input_result_file, output_file_path):
    '''
    1. read the result of different comp4 result
    2. the thresh is used to select the rows above the thresh
    :param output_file_path: store the result generated by the thresh
    :return: nothing
    '''

    #read file
    filtered_list = []
    with open(input_result_file) as fp:
        for cnt, line in enumerate(fp):
            row_list = line.split()
            if float(row_list[1]) > thresh:
                filtered_list.append(row_list)
                print(row_list)

    with open(output_file_path, 'w') as fp:
        output_string = ""
        for row in filtered_list:
            output_string += " ".join(row) + "\n"

        fp.write(output_string)
    pass


def create_folder_by_thresh(folder_name):
    import os
    try:
        os.mkdir(folder_name)
    except:
        pass


def generate_all_thresh_predicitons():
    pascal_class_dic = {'aeroplane': 0, 'bicycle': 1, 'bird': 2, 'boat': 3, 'bottle': 4,
                        'bus': 5, 'car': 6, 'cat': 7, 'chair': 8, 'cow': 9,
                        'diningtable': 10, 'dog': 11, 'horse': 12, 'motorbike': 13, 'person': 14,
                        'pottedplant': 15, 'sheep': 16, 'sofa': 17, 'train': 18, 'tvmonitor': 19}

    for thresh in np.arange(0.1, 1, 0.1):
        folder_name = "result_thresh_{}".format(thresh)
        create_folder_by_thresh(folder_name)
        for category in pascal_class_dic.keys():
            input_result_file = "comp4_det_test_{}.txt".format(category)
            output_file_path = "{}/comp4_det_test_{}.txt".format(folder_name, category)

            generate_result(thresh, input_result_file, output_file_path)


if __name__ == '__main__':

    generate_all_thresh_predicitons()


